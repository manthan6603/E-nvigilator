[{"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\index.js":"1","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\App.js":"2","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\HomeComponent\\Home.js":"3","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentLogin\\StudentLogin.js":"4","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentDashboard\\StudentDashboard.js":"5","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentSignup\\StudentSignup.js":"6","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminLogin\\AdminLogin.js":"7","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\AdminDashboard.js":"8","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentDashboard\\ResultComponent\\Result.js":"9","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentDashboard\\ExamComponent\\Exam.js":"10","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentDashboard\\Subject\\Subject.js":"11","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentDashboard\\TestComponent\\Test.js":"12","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\SubjectComponent\\Subject.js":"13","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\Exam.js":"14","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\Dashboard\\Dashboard.js":"15","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\QuestionComponent\\Question.js":"16","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ResultComponent\\Result.js":"17","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\StudentList\\StudentList.js":"18","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\DetailComponent\\Details.js":"19","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\StudentList\\Student\\Student.js":"20","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\ViewQuestion\\ViewQuestion.js":"21","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\AddQuestion\\AddQuestion.js":"22","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\baseUrl.jsx":"23"},{"size":144,"mtime":1710609535686,"results":"24","hashOfConfig":"25"},{"size":1307,"mtime":1710609892214,"results":"26","hashOfConfig":"25"},{"size":1171,"mtime":1710611238009,"results":"27","hashOfConfig":"25"},{"size":1991,"mtime":1710609369422,"results":"28","hashOfConfig":"25"},{"size":1817,"mtime":1710609300015,"results":"29","hashOfConfig":"25"},{"size":2638,"mtime":1710612983495,"results":"30","hashOfConfig":"25"},{"size":1810,"mtime":1710608962307,"results":"31","hashOfConfig":"25"},{"size":4911,"mtime":1710608911133,"results":"32","hashOfConfig":"25"},{"size":2405,"mtime":1710602761671,"results":"33","hashOfConfig":"25"},{"size":2142,"mtime":1710932918787,"results":"34","hashOfConfig":"25"},{"size":1109,"mtime":1710609552243,"results":"35","hashOfConfig":"25"},{"size":3200,"mtime":1710609244393,"results":"36","hashOfConfig":"25"},{"size":3471,"mtime":1710608848270,"results":"37","hashOfConfig":"25"},{"size":4511,"mtime":1710608445492,"results":"38","hashOfConfig":"25"},{"size":1552,"mtime":1710608190228,"results":"39","hashOfConfig":"25"},{"size":2307,"mtime":1710608558456,"results":"40","hashOfConfig":"25"},{"size":2203,"mtime":1710608611424,"results":"41","hashOfConfig":"25"},{"size":1799,"mtime":1710608789040,"results":"42","hashOfConfig":"25"},{"size":3139,"mtime":1710608309811,"results":"43","hashOfConfig":"25"},{"size":2856,"mtime":1710608714672,"results":"44","hashOfConfig":"25"},{"size":4478,"mtime":1710609554341,"results":"45","hashOfConfig":"25"},{"size":3722,"mtime":1710608249313,"results":"46","hashOfConfig":"25"},{"size":71,"mtime":1710602760886,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1q78ur0",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\index.js",[],["100","101"],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\App.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\HomeComponent\\Home.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentLogin\\StudentLogin.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentDashboard\\StudentDashboard.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentSignup\\StudentSignup.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminLogin\\AdminLogin.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\AdminDashboard.js",["102"],"import style from \"./AdminDashboard.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NavLink, BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport pic4 from \"../../../images/logo.png\";\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport Subject from \"./SubjectComponent/Subject\";\r\nimport Exam from \"./ExamComponent/Exam\";\r\nimport Question from \"./QuestionComponent/Question\";\r\nimport Result from \"./ResultComponent/Result\";\r\nimport StudentList from \"./StudentList/StudentList\";\r\nimport Student from \"./StudentList/Student/Student\";\r\nimport Details from \"./ExamComponent/DetailComponent/Details\";\r\nimport ViewQuestion from \"./ExamComponent/ViewQuestion/ViewQuestion\";\r\nimport AddQuestion from \"./ExamComponent/AddQuestion/AddQuestion\";\r\n\r\nfunction AdminDashboard() {\r\n  let history = useHistory();\r\n\r\n  function goToAdminLogin() {\r\n    history.push(\"/AdminLogin\");\r\n  }\r\n\r\n  // Static data for subjects\r\n  const subjects = [\r\n    { id: 1, name: \"Subject 1\" },\r\n    { id: 2, name: \"Subject 2\" },\r\n    { id: 3, name: \"Subject 3\" }\r\n  ];\r\n\r\n  // Static data for exams\r\n  const exams = [\r\n    { id: 1, name: \"Exam 1\" },\r\n    { id: 2, name: \"Exam 2\" },\r\n    { id: 3, name: \"Exam 3\" }\r\n  ];\r\n\r\n  // Static data for questions\r\n  const questions = [\r\n    { id: 1, name: \"Question 1\" },\r\n    { id: 2, name: \"Question 2\" },\r\n    { id: 3, name: \"Question 3\" }\r\n  ];\r\n\r\n  // Static data for results\r\n  const results = [\r\n    { id: 1, name: \"Result 1\" },\r\n    { id: 2, name: \"Result 2\" },\r\n    { id: 3, name: \"Result 3\" }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <div id={style.header}>\r\n          <div id={style.headerHeadingBox}>\r\n            <h3>Online Exam System</h3>\r\n          </div>\r\n          <div id={style.headerMenuBox}>\r\n            <NavLink exact to=\"/AdminDashboard\">\r\n              <span> Dashboard</span>\r\n            </NavLink>\r\n            <a>\r\n              <span onClick={goToAdminLogin}> Logout</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <div id={style.content}>\r\n          <div id={style.sideMenubar}>\r\n            <div id={style.sideMenubarImageBox}>\r\n              <img src={pic4} alt=\"\" />\r\n            </div>\r\n            <div id={style.sideMenubarList}>\r\n              <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Subject\">\r\n                {\" \"}\r\n                <button>\r\n                  {\" \"}\r\n                  <span> Subject </span>\r\n                </button>\r\n              </NavLink>\r\n              <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Exam\">\r\n                {\" \"}\r\n                <button>\r\n                  {\" \"}\r\n                  <span> Exam </span>\r\n                </button>\r\n              </NavLink>\r\n              <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Question\">\r\n                {\" \"}\r\n                <button>\r\n                  {\" \"}\r\n                  <span> Question </span>\r\n                </button>\r\n              </NavLink>\r\n              <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Result\">\r\n                {\" \"}\r\n                <button>\r\n                  {\" \"}\r\n                  <span> Result </span>\r\n                </button>\r\n              </NavLink>\r\n              <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/StudentList\">\r\n                {\" \"}\r\n                <button>\r\n                  {\" \"}\r\n                  <span> StudentList </span>\r\n                </button>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n\r\n          <div id={style.display}>\r\n            <Switch>\r\n              <Route exact path=\"/AdminDashboard\" component={Dashboard}></Route>\r\n              <Route exact path=\"/AdminDashboard/Subject\">\r\n                <Subject subjects={subjects} />\r\n              </Route>\r\n              <Route exact path=\"/AdminDashboard/Exam\">\r\n                <Exam exams={exams} />\r\n              </Route>\r\n              <Route exact path=\"/AdminDashboard/Question\">\r\n                <Question questions={questions} />\r\n              </Route>\r\n              <Route exact path=\"/AdminDashboard/Result\">\r\n                <Result results={results} />\r\n              </Route>\r\n              <Route exact path=\"/AdminDashboard/StudentList\" component={StudentList}></Route>\r\n              <Route exact path=\"/AdminDashboard/Exam/Details/:id\" component={Details}></Route>\r\n              <Route exact path=\"/AdminDashboard/Exam/ViewQuestion/:id\" component={ViewQuestion}></Route>\r\n              <Route exact path=\"/AdminDashboard/Exam/AddQuestion/:id\" component={AddQuestion}></Route>\r\n              <Route exact path=\"/AdminDashboard/StudentList/Details/:id\" component={Student}></Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentDashboard\\ResultComponent\\Result.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentDashboard\\ExamComponent\\Exam.js",["103"],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentDashboard\\Subject\\Subject.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\StudentComponent\\StudentDashboard\\TestComponent\\Test.js",["104","105","106"],"import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport style from \"../StudentDashboard.module.css\";\r\n\r\nfunction Test() {\r\n    const { id, category } = useParams();\r\n\r\n    // Sample static questions data to replace backend data\r\n    const allQuestions = [\r\n        {\r\n            qname: \"Question 1?\",\r\n            optionOne: \"Option 1\",\r\n            optionTwo: \"Option 2\",\r\n            optionThree: \"Option 3\",\r\n            optionFour: \"Option 4\",\r\n            answer: \"Option 1\",\r\n        },\r\n        {\r\n            qname: \"Question 2?\",\r\n            optionOne: \"Option 1\",\r\n            optionTwo: \"Option 2\",\r\n            optionThree: \"Option 3\",\r\n            optionFour: \"Option 4\",\r\n            answer: \"Option 2\",\r\n        },\r\n        // Add more static questions data as needed\r\n    ];\r\n\r\n    const [answer, setAnswer] = useState({\r\n        answer1: \"\",\r\n        answer2: \"\",\r\n        answer3: \"\",\r\n        answer4: \"\",\r\n        answer5: \"\",\r\n    });\r\n\r\n    function onRadioButtonChange(e) {\r\n        setAnswer({\r\n            ...answer,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    function submitTest() {\r\n        // Implementing the logic to calculate score and status based on the answers\r\n        // This logic should remain unchanged regardless of whether data is static or dynamic\r\n\r\n        // For demonstration purposes, let's assume all answers are correct\r\n        const correctAnswer = [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 1\"];\r\n        let score = 0;\r\n        for (let i = 1; i <= 5; i++) {\r\n            if (correctAnswer[i - 1] === answer[`answer${i}`]) {\r\n                score++;\r\n            }\r\n        }\r\n\r\n        const status = score >= 3 ? \"Pass\" : \"Fail\";\r\n\r\n        // Simulating the submission process by navigating to the result page\r\n        history.push(\"/StudentDashboard/Result\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id={style.displayBoxQuestionHeadingBox}>\r\n                <h1>Answer all the questions</h1>\r\n            </div>\r\n            {allQuestions.map((data, i) => (\r\n                <div id={style.displayBoxQuestionBox} key={i}>\r\n                    <div id={style.divQuestion}>\r\n                        <span>{data.qname}</span>\r\n                    </div>\r\n                    {[1, 2, 3, 4].map((option) => (\r\n                        <div key={option}>\r\n                            <input\r\n                                onChange={(e) => onRadioButtonChange(e)}\r\n                                value={data[`option${option}`]}\r\n                                id={style[`option${option}`]}\r\n                                name={`answer${i + 1}`}\r\n                                type=\"radio\"\r\n                            />\r\n                            <label htmlFor={`option${option}`}>{data[`option${option}`]}</label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            <div id={style.submitExam}>\r\n                <button onClick={submitTest}>Submit Exam</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\SubjectComponent\\Subject.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\Exam.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\Dashboard\\Dashboard.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\QuestionComponent\\Question.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ResultComponent\\Result.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\StudentList\\StudentList.js",["107"],"import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"../SubjectComponent/Subject.module.css\";\r\n\r\nfunction StudentList() {\r\n    const [students, setStudents] = useState([\r\n        { id: 1, name: \"John Doe\", email: \"john@example.com\" },\r\n        { id: 2, name: \"Jane Smith\", email: \"jane@example.com\" },\r\n        { id: 3, name: \"Alice Johnson\", email: \"alice@example.com\" }\r\n    ]);\r\n\r\n    // useEffect to fetch students from the backend\r\n    useEffect(() => {\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div id={style.displayHeadingBox}>\r\n                <h2>Student List</h2>\r\n            </div>\r\n\r\n            <div id={style.tableBox}>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th id={style.center}>User Name</th>\r\n                            <th id={style.center}>User Email</th>\r\n                            <th id={style.center}>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {students.map((data, i) => (\r\n                            <tr key={i}>\r\n                                <td>{data.name}</td>\r\n                                <td>{data.email}</td>\r\n                                <td>\r\n                                    <NavLink exact to={`/AdminDashboard/StudentList/Details/${data.email}`}>\r\n                                        <button>View Result</button>\r\n                                    </NavLink>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StudentList;\r\n","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\DetailComponent\\Details.js",["108","109","110"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport style from \"../../SubjectComponent/Subject.module.css\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../../../../baseUrl\";\r\n\r\nfunction Details() {\r\n    const { id } = useParams();\r\n\r\n    const [exam, setExam] = useState({\r\n        name: \"Sample Exam Name\",\r\n        desc: \"Sample Exam Description\",\r\n        level: \"Sample Exam Level\",\r\n        passMarks: \"Sample Pass Marks\",\r\n        totalQuestion: \"Sample Total Questions\",\r\n        marks: \"Sample Total Marks\",\r\n        date: \"Sample Exam Date\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Simulating data fetching from backend\r\n        async function getExamDetails() {\r\n            // const value = await axios.get(`${baseUrl}/exam/${id}`);\r\n            // setExam(value.data);\r\n            console.log(\"Fetching data from backend for exam with ID:\", id);\r\n        }\r\n        getExamDetails();\r\n    }, [id]);\r\n\r\n    // -------------------------Go back function---------------------------------------\r\n\r\n    let history = useHistory();\r\n\r\n    function handleGoBack() {\r\n        history.push(\"/AdminDashboard/Exam\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id={style.displayHeadingBox}>\r\n                <h2>Exam Details</h2>\r\n            </div>\r\n\r\n            <div id={style.tableBox}>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th id={style.center}>Exam Name</th>\r\n                            <td id={style.center}> {exam.name} </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th id={style.center}>Exam Description</th>\r\n                            <td id={style.center}> {exam.desc} </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th id={style.center}>Exam Creation Date</th>\r\n                            <td id={style.center}> {exam.date} </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th id={style.center}>Exam Total Marks</th>\r\n                            <td id={style.center}> {exam.marks} </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th id={style.center}>Exam Total Question</th>\r\n                            <td id={style.center}> {exam.totalQuestion} </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th id={style.center}>Exam Pass Marks</th>\r\n                            <td id={style.center}> {exam.passMarks} </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th id={style.center}>Exam Level</th>\r\n                            <td id={style.center}> {exam.level} </td>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n            </div>\r\n\r\n            <div id={style.addSubjectBox}>\r\n                <button onClick={handleGoBack}>Go Back</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Details;\r\n","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\StudentList\\Student\\Student.js",["111","112"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport style from \"../../SubjectComponent/Subject.module.css\";\r\n\r\nfunction Student() {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [email, setEmail] = useState(\"example@example.com\");\r\n    const [result, setResult] = useState([\r\n        {\r\n            id: 1,\r\n            email: { email: \"example@example.com\" },\r\n            sname: { name: \"Sample Exam 1\" },\r\n            edate: \"2024-03-16\",\r\n            status: \"Pass\",\r\n            score: 80,\r\n            totalMarks: 100\r\n        },\r\n        {\r\n            id: 2,\r\n            email: { email: \"example@example.com\" },\r\n            sname: { name: \"Sample Exam 2\" },\r\n            edate: \"2024-03-17\",\r\n            status: \"Fail\",\r\n            score: 50,\r\n            totalMarks: 100\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [id]);\r\n\r\n    const handleGoBack = () => {\r\n        history.push(\"/AdminDashboard/StudentList\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id={style.displayHeadingBox}>\r\n                <h2>Student Exam List</h2>\r\n            </div>\r\n\r\n            <div id={style.tableBox}>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th id={style.center}>User Email</th>\r\n                            <th id={style.center}>Exam Name</th>\r\n                            <th id={style.center}>Exam Date</th>\r\n                            <th id={style.center}>Result Status</th>\r\n                            <th id={style.center}>Total Marks</th>\r\n                            <th id={style.center}>Result Score</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {result.map((data, i) => {\r\n                            if (data.email.email === email) {\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        <td>{data.email.email}</td>\r\n                                        <td>{data.sname.name}</td>\r\n                                        <td>{data.edate}</td>\r\n                                        <td>{data.status}</td>\r\n                                        <td>{data.score}</td>\r\n                                        <td>{data.totalMarks}</td>\r\n                                    </tr>\r\n                                );\r\n                            }\r\n                            return null;\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div id={style.addSubjectBox}>\r\n                <button onClick={handleGoBack}>Go Back</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Student;\r\n","C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\ViewQuestion\\ViewQuestion.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\AddQuestion\\AddQuestion.js",[],"C:\\Users\\MANTHAN PARMAR\\Desktop\\e proctor\\frontend\\src\\Components\\baseUrl.jsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":62,"column":13,"nodeType":"119","endLine":62,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"120","line":11,"column":5},{"ruleId":"121","severity":1,"message":"122","line":6,"column":13,"nodeType":"123","messageId":"124","endLine":6,"endColumn":15},{"ruleId":"121","severity":1,"message":"125","line":6,"column":17,"nodeType":"123","messageId":"124","endLine":6,"endColumn":25},{"ruleId":"121","severity":1,"message":"126","line":59,"column":15,"nodeType":"123","messageId":"124","endLine":59,"endColumn":21},{"ruleId":"121","severity":1,"message":"127","line":6,"column":22,"nodeType":"123","messageId":"124","endLine":6,"endColumn":33},{"ruleId":"121","severity":1,"message":"128","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},{"ruleId":"121","severity":1,"message":"129","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":15},{"ruleId":"121","severity":1,"message":"130","line":10,"column":18,"nodeType":"123","messageId":"124","endLine":10,"endColumn":25},{"ruleId":"121","severity":1,"message":"131","line":9,"column":19,"nodeType":"123","messageId":"124","endLine":9,"endColumn":27},{"ruleId":"121","severity":1,"message":"132","line":10,"column":20,"nodeType":"123","messageId":"124","endLine":10,"endColumn":29},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  9 |\u001b[39m         }\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m     }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[36mlet\u001b[39m { category } \u001b[33m=\u001b[39m useParams()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m     \u001b[36mconst\u001b[39m allExam \u001b[33m=\u001b[39m [\u001b[0m","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'category' is assigned a value but never used.","'status' is assigned a value but never used.","'setStudents' is assigned a value but never used.","'axios' is defined but never used.","'baseUrl' is defined but never used.","'setExam' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setResult' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]