{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANTHAN PARMAR\\\\Desktop\\\\e proctor(test)\\\\frontend\\\\src\\\\Components\\\\StudentComponent\\\\StudentDashboard\\\\TestComponent\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const history = useHistory();\n  const allQuestions = [{\n    questionId: 'q1',\n    questionText: \"What is the capital of France?\",\n    options: [\"Paris\", \"London\", \"Berlin\", \"Madrid\"],\n    correctAnswer: \"Paris\"\n  }, {\n    questionId: 'q2',\n    questionText: \"What is 2 + 2?\",\n    options: [\"3\", \"4\", \"5\", \"6\"],\n    correctAnswer: \"4\"\n  }, {\n    questionId: 'q3',\n    questionText: \"Who wrote Hamlet?\",\n    options: [\"William Shakespeare\", \"Charles Dickens\", \"Leo Tolstoy\", \"Mark Twain\"],\n    correctAnswer: \"William Shakespeare\"\n  }, {\n    questionId: 'q4',\n    questionText: \"What is the largest ocean on Earth?\",\n    options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Arctic Ocean\", \"Pacific Ocean\"],\n    correctAnswer: \"Pacific Ocean\"\n  }, {\n    questionId: 'q5',\n    questionText: \"What year did the Titanic sink?\",\n    options: [\"1912\", \"1905\", \"1898\", \"1923\"],\n    correctAnswer: \"1912\"\n  }];\n  const [answers, setAnswers] = useState({});\n  function handleAnswerChange(event, questionId) {\n    setAnswers({\n      ...answers,\n      [questionId]: event.target.value\n    });\n  }\n  function submitTest() {\n    const score = allQuestions.reduce((totalScore, question) => {\n      return totalScore + (answers[question.questionId] === question.correctAnswer ? 1 : 0);\n    }, 0);\n    const results = {\n      answers: answers,\n      score: score,\n      totalQuestions: allQuestions.length\n    };\n    sessionStorage.setItem('examResults', JSON.stringify(results));\n    history.push(\"/results\");\n  }\n\n  // Inline styles\n  const styles = {\n    container: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif',\n      maxWidth: '600px',\n      margin: '20px auto',\n      backgroundColor: '#f9f9f9',\n      borderRadius: '8px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n    },\n    question: {\n      marginBottom: '15px',\n      paddingBottom: '10px',\n      borderBottom: '1px solid #eee'\n    },\n    questionText: {\n      fontSize: '18px',\n      color: '#333'\n    },\n    label: {\n      fontSize: '16px',\n      display: 'block',\n      margin: '5px 0',\n      cursor: 'pointer'\n    },\n    radioButton: {\n      marginRight: '10px'\n    },\n    submitButton: {\n      display: 'block',\n      marginTop: '20px',\n      padding: '10px 20px',\n      backgroundColor: '#007BFF',\n      color: '#fff',\n      border: 'none',\n      borderRadius: '5px',\n      cursor: 'pointer',\n      width: '100%'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [allQuestions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.question,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.questionText,\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: question.questionId,\n          value: option,\n          checked: answers[question.questionId] === option,\n          onChange: e => handleAnswerChange(e, question.questionId),\n          style: styles.radioButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this), option]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this))]\n    }, question.questionId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.submitButton,\n      onClick: submitTest,\n      children: \"Submit Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n_s(Test, \"V8vJUQ5+rsy5floPP72XO/lEjOs=\", false, function () {\n  return [useHistory];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","Test","_s","history","allQuestions","questionId","questionText","options","correctAnswer","answers","setAnswers","handleAnswerChange","event","target","value","submitTest","score","reduce","totalScore","question","results","totalQuestions","length","sessionStorage","setItem","JSON","stringify","push","styles","container","padding","fontFamily","maxWidth","margin","backgroundColor","borderRadius","boxShadow","marginBottom","paddingBottom","borderBottom","fontSize","color","label","display","cursor","radioButton","marginRight","submitButton","marginTop","border","width","style","children","map","fileName","_jsxFileName","lineNumber","columnNumber","option","type","name","checked","onChange","e","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MANTHAN PARMAR/Desktop/e proctor(test)/frontend/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Test() {\r\n    const history = useHistory();\r\n\r\n    const allQuestions = [\r\n        {\r\n            questionId: 'q1',\r\n            questionText: \"What is the capital of France?\",\r\n            options: [\"Paris\", \"London\", \"Berlin\", \"Madrid\"],\r\n            correctAnswer: \"Paris\"\r\n        },\r\n        {\r\n            questionId: 'q2',\r\n            questionText: \"What is 2 + 2?\",\r\n            options: [\"3\", \"4\", \"5\", \"6\"],\r\n            correctAnswer: \"4\"\r\n        },\r\n        {\r\n            questionId: 'q3',\r\n            questionText: \"Who wrote Hamlet?\",\r\n            options: [\"William Shakespeare\", \"Charles Dickens\", \"Leo Tolstoy\", \"Mark Twain\"],\r\n            correctAnswer: \"William Shakespeare\"\r\n        },\r\n        {\r\n            questionId: 'q4',\r\n            questionText: \"What is the largest ocean on Earth?\",\r\n            options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Arctic Ocean\", \"Pacific Ocean\"],\r\n            correctAnswer: \"Pacific Ocean\"\r\n        },\r\n        {\r\n            questionId: 'q5',\r\n            questionText: \"What year did the Titanic sink?\",\r\n            options: [\"1912\", \"1905\", \"1898\", \"1923\"],\r\n            correctAnswer: \"1912\"\r\n        }\r\n    ];\r\n\r\n    const [answers, setAnswers] = useState({});\r\n\r\n    function handleAnswerChange(event, questionId) {\r\n        setAnswers({\r\n            ...answers,\r\n            [questionId]: event.target.value\r\n        });\r\n    }\r\n\r\n    function submitTest() {\r\n        const score = allQuestions.reduce((totalScore, question) => {\r\n            return totalScore + (answers[question.questionId] === question.correctAnswer ? 1 : 0);\r\n        }, 0);\r\n\r\n        const results = {\r\n            answers: answers,\r\n            score: score,\r\n            totalQuestions: allQuestions.length\r\n        };\r\n\r\n        sessionStorage.setItem('examResults', JSON.stringify(results));\r\n        history.push(\"/results\");\r\n    }\r\n\r\n    // Inline styles\r\n    const styles = {\r\n        container: {\r\n            padding: '20px',\r\n            fontFamily: 'Arial, sans-serif',\r\n            maxWidth: '600px',\r\n            margin: '20px auto',\r\n            backgroundColor: '#f9f9f9',\r\n            borderRadius: '8px',\r\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n        },\r\n        question: {\r\n            marginBottom: '15px',\r\n            paddingBottom: '10px',\r\n            borderBottom: '1px solid #eee'\r\n        },\r\n        questionText: {\r\n            fontSize: '18px',\r\n            color: '#333'\r\n        },\r\n        label: {\r\n            fontSize: '16px',\r\n            display: 'block',\r\n            margin: '5px 0',\r\n            cursor: 'pointer'\r\n        },\r\n        radioButton: {\r\n            marginRight: '10px'\r\n        },\r\n        submitButton: {\r\n            display: 'block',\r\n            marginTop: '20px',\r\n            padding: '10px 20px',\r\n            backgroundColor: '#007BFF',\r\n            color: '#fff',\r\n            border: 'none',\r\n            borderRadius: '5px',\r\n            cursor: 'pointer',\r\n            width: '100%'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            {allQuestions.map((question) => (\r\n                <div key={question.questionId} style={styles.question}>\r\n                    <p style={styles.questionText}>{question.questionText}</p>\r\n                    {question.options.map((option) => (\r\n                        <label style={styles.label} key={option}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name={question.questionId}\r\n                                value={option}\r\n                                checked={answers[question.questionId] === option}\r\n                                onChange={(e) => handleAnswerChange(e, question.questionId)}\r\n                                style={styles.radioButton}\r\n                            />\r\n                            {option}\r\n                        </label>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            <button style={styles.submitButton} onClick={submitTest}>Submit Exam</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}