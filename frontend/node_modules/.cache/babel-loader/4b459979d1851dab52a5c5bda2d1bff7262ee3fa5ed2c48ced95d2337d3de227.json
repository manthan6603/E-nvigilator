{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANTHAN PARMAR\\\\Desktop\\\\e proctor(test)\\\\frontend\\\\src\\\\Components\\\\StudentComponent\\\\StudentDashboard\\\\ExamComponent\\\\Exam.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams, NavLink, useHistory } from \"react-router-dom\";\nimport style from \"../StudentDashboard.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5000/api';\nfunction Exam() {\n  _s();\n  let {\n    category\n  } = useParams();\n  const history = useHistory();\n  const [exams, setExams] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState({}); // State to store selected answers\n\n  useEffect(() => {\n    const fetchExams = async () => {\n      try {\n        const response = await axios.get(\"/exams\");\n        setExams(response.data);\n      } catch (error) {\n        console.error(\"Error fetching exams:\", error);\n      }\n    };\n    fetchExams();\n  }, []);\n  const handleGoToExam = async examId => {\n    try {\n      // Assume starting proctoring and navigating to exam page\n      history.push(`/StudentDashboard/Exam/${category}/${examId}`);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const handleOptionChange = (questionId, option) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionId]: option\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.displayBoxHeadingBox,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"All \", category, \" Exams\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), exams.filter(exam => exam.name === category).map((exam, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.displayBoxExamBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.div1,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: exam.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.div2,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Exam ID: \", exam._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.div2,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Exam Description: \", exam.desc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.div3,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Pass Marks: \", exam.passMarks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.div4,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Total Marks: \", exam.marks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.div5,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGoToExam(exam._id),\n          children: \"Go to Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), exam.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), question.options.map((option, oIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: question._id,\n            value: option,\n            checked: selectedAnswers[question._id] === option,\n            onChange: () => handleOptionChange(question._id, option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this), option]\n        }, oIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this))]\n      }, qIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n_s(Exam, \"TLRR2b/tuuCf5SJbvcanZbMW0QQ=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = Exam;\nexport default Exam;\nvar _c;\n$RefreshReg$(_c, \"Exam\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","NavLink","useHistory","style","jsxDEV","_jsxDEV","Fragment","_Fragment","defaults","baseURL","Exam","_s","category","history","exams","setExams","selectedAnswers","setSelectedAnswers","fetchExams","response","get","data","error","console","handleGoToExam","examId","push","handleOptionChange","questionId","option","prev","children","id","displayBoxHeadingBox","fileName","_jsxFileName","lineNumber","columnNumber","filter","exam","name","map","index","displayBoxExamBox","div1","div2","_id","desc","div3","passMarks","div4","marks","div5","onClick","questions","question","qIndex","questionText","options","oIndex","type","value","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/MANTHAN PARMAR/Desktop/e proctor(test)/frontend/src/Components/StudentComponent/StudentDashboard/ExamComponent/Exam.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, NavLink, useHistory } from \"react-router-dom\";\r\nimport style from \"../StudentDashboard.module.css\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nfunction Exam() {\r\n    let { category } = useParams();\r\n    const history = useHistory();\r\n    const [exams, setExams] = useState([]);\r\n    const [selectedAnswers, setSelectedAnswers] = useState({}); // State to store selected answers\r\n\r\n    useEffect(() => {\r\n        const fetchExams = async () => {\r\n            try {\r\n                const response = await axios.get(\"/exams\");\r\n                setExams(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching exams:\", error);\r\n            }\r\n        };\r\n        fetchExams();\r\n    }, []);\r\n\r\n    const handleGoToExam = async (examId) => {\r\n        try {\r\n            // Assume starting proctoring and navigating to exam page\r\n            history.push(`/StudentDashboard/Exam/${category}/${examId}`);\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n        }\r\n    };\r\n\r\n    const handleOptionChange = (questionId, option) => {\r\n        setSelectedAnswers(prev => ({ ...prev, [questionId]: option }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id={style.displayBoxHeadingBox}>\r\n                <h1>All {category} Exams</h1>\r\n            </div>\r\n            {exams.filter(exam => exam.name === category).map((exam, index) => (\r\n                <div id={style.displayBoxExamBox} key={index}>\r\n                    <div id={style.div1}><span>{exam.name}</span></div>\r\n                    <div id={style.div2}><span>Exam ID: {exam._id}</span></div>\r\n                    <div id={style.div2}><span>Exam Description: {exam.desc}</span></div>\r\n                    <div id={style.div3}><span>Pass Marks: {exam.passMarks}</span></div>\r\n                    <div id={style.div4}><span>Total Marks: {exam.marks}</span></div>\r\n                    <div id={style.div5}>\r\n                        <button onClick={() => handleGoToExam(exam._id)}>Go to Exam</button>\r\n                    </div>\r\n                    {exam.questions.map((question, qIndex) => (\r\n                        <div key={qIndex}>\r\n                            <p>{question.questionText}</p>\r\n                            {question.options.map((option, oIndex) => (\r\n                                <label key={oIndex}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name={question._id}\r\n                                        value={option}\r\n                                        checked={selectedAnswers[question._id] === option}\r\n                                        onChange={() => handleOptionChange(question._id, option)}\r\n                                    />\r\n                                    {option}\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Exam;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,OAAO,EAAEC,UAAU,QAAQ,kBAAkB;AACjE,OAAOC,KAAK,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnDR,KAAK,CAACS,QAAQ,CAACC,OAAO,GAAG,2BAA2B;AAEpD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,IAAI;IAAEC;EAAS,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC9B,MAAMa,OAAO,GAAGX,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE5DC,SAAS,CAAC,MAAM;IACZ,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,QAAQ,CAAC;QAC1CL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IACDJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,cAAc,GAAG,MAAOC,MAAM,IAAK;IACrC,IAAI;MACA;MACAZ,OAAO,CAACa,IAAI,CAAE,0BAAyBd,QAAS,IAAGa,MAAO,EAAC,CAAC;IAChE,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAED,MAAMK,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,MAAM,KAAK;IAC/CZ,kBAAkB,CAACa,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACF,UAAU,GAAGC;IAAO,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,oBACIxB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACI1B,OAAA;MAAK2B,EAAE,EAAE7B,KAAK,CAAC8B,oBAAqB;MAAAF,QAAA,eAChC1B,OAAA;QAAA0B,QAAA,GAAI,MAAI,EAACnB,QAAQ,EAAC,QAAM;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,EACLvB,KAAK,CAACwB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK5B,QAAQ,CAAC,CAAC6B,GAAG,CAAC,CAACF,IAAI,EAAEG,KAAK,kBAC1DrC,OAAA;MAAK2B,EAAE,EAAE7B,KAAK,CAACwC,iBAAkB;MAAAZ,QAAA,gBAC7B1B,OAAA;QAAK2B,EAAE,EAAE7B,KAAK,CAACyC,IAAK;QAAAb,QAAA,eAAC1B,OAAA;UAAA0B,QAAA,EAAOQ,IAAI,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnDhC,OAAA;QAAK2B,EAAE,EAAE7B,KAAK,CAAC0C,IAAK;QAAAd,QAAA,eAAC1B,OAAA;UAAA0B,QAAA,GAAM,WAAS,EAACQ,IAAI,CAACO,GAAG;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3DhC,OAAA;QAAK2B,EAAE,EAAE7B,KAAK,CAAC0C,IAAK;QAAAd,QAAA,eAAC1B,OAAA;UAAA0B,QAAA,GAAM,oBAAkB,EAACQ,IAAI,CAACQ,IAAI;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrEhC,OAAA;QAAK2B,EAAE,EAAE7B,KAAK,CAAC6C,IAAK;QAAAjB,QAAA,eAAC1B,OAAA;UAAA0B,QAAA,GAAM,cAAY,EAACQ,IAAI,CAACU,SAAS;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpEhC,OAAA;QAAK2B,EAAE,EAAE7B,KAAK,CAAC+C,IAAK;QAAAnB,QAAA,eAAC1B,OAAA;UAAA0B,QAAA,GAAM,eAAa,EAACQ,IAAI,CAACY,KAAK;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjEhC,OAAA;QAAK2B,EAAE,EAAE7B,KAAK,CAACiD,IAAK;QAAArB,QAAA,eAChB1B,OAAA;UAAQgD,OAAO,EAAEA,CAAA,KAAM7B,cAAc,CAACe,IAAI,CAACO,GAAG,CAAE;UAAAf,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,EACLE,IAAI,CAACe,SAAS,CAACb,GAAG,CAAC,CAACc,QAAQ,EAAEC,MAAM,kBACjCnD,OAAA;QAAA0B,QAAA,gBACI1B,OAAA;UAAA0B,QAAA,EAAIwB,QAAQ,CAACE;QAAY;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC7BkB,QAAQ,CAACG,OAAO,CAACjB,GAAG,CAAC,CAACZ,MAAM,EAAE8B,MAAM,kBACjCtD,OAAA;UAAA0B,QAAA,gBACI1B,OAAA;YACIuD,IAAI,EAAC,OAAO;YACZpB,IAAI,EAAEe,QAAQ,CAACT,GAAI;YACnBe,KAAK,EAAEhC,MAAO;YACdiC,OAAO,EAAE9C,eAAe,CAACuC,QAAQ,CAACT,GAAG,CAAC,KAAKjB,MAAO;YAClDkC,QAAQ,EAAEA,CAAA,KAAMpC,kBAAkB,CAAC4B,QAAQ,CAACT,GAAG,EAAEjB,MAAM;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC,EACDR,MAAM;QAAA,GARC8B,MAAM;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASX,CACV,CAAC;MAAA,GAbImB,MAAM;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcX,CACR,CAAC;IAAA,GAzBiCK,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0BvC,CACR,CAAC;EAAA,eACJ,CAAC;AAEX;AAAC1B,EAAA,CAnEQD,IAAI;EAAA,QACUV,SAAS,EACZE,UAAU;AAAA;AAAA8D,EAAA,GAFrBtD,IAAI;AAqEb,eAAeA,IAAI;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}