{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANTHAN PARMAR\\\\Desktop\\\\e proctor(test)\\\\frontend\\\\src\\\\Components\\\\StudentComponent\\\\StudentDashboard\\\\TestComponent\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport style from \"../StudentDashboard.module.css\";\nimport axios from \"axios\";\n// Set the base URL for all axios requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5000';\nfunction submitTest() {\n  axios.post('/finish_proctoring', {\n    data: 'some data'\n  }).then(response => {\n    console.log('Proctoring finished:', response.data);\n  }).catch(error => {\n    console.error('Error finishing proctoring:', error);\n  });\n}\nfunction Test() {\n  _s();\n  const {\n    id,\n    category\n  } = useParams();\n  const allQuestions = [\n    // Your questions here\n  ];\n  const [answers, setAnswers] = useState({});\n  const history = useHistory();\n  function submitTest() {\n    axios.post('http://localhost:5000/finish_proctoring').then(response => {\n      console.log(response.data.message);\n      history.push(\"/StudentDashboard/Result\");\n    }).catch(error => {\n      console.error('Error finishing proctoring:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitTest,\n      children: \"Submit Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Test, \"wTDG7i+Lo8WjzFDrgb7CfrQk+y8=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useHistory","useParams","style","axios","jsxDEV","_jsxDEV","defaults","baseURL","submitTest","post","data","then","response","console","log","catch","error","Test","_s","id","category","allQuestions","answers","setAnswers","history","message","push","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MANTHAN PARMAR/Desktop/e proctor(test)/frontend/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport style from \"../StudentDashboard.module.css\";\r\nimport axios from \"axios\";\r\n// Set the base URL for all axios requests\r\naxios.defaults.baseURL = 'http://localhost:5000';\r\n\r\nfunction submitTest() {\r\n  axios.post('/finish_proctoring', { data: 'some data' })\r\n    .then(response => {\r\n      console.log('Proctoring finished:', response.data);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error finishing proctoring:', error);\r\n    });\r\n}\r\nfunction Test() {\r\n    const { id, category } = useParams();\r\n    const allQuestions = [\r\n        // Your questions here\r\n    ];\r\n    const [answers, setAnswers] = useState({});\r\n    const history = useHistory();\r\n\r\n    function submitTest() {\r\n        axios.post('http://localhost:5000/finish_proctoring')\r\n            .then(response => {\r\n                console.log(response.data.message);\r\n                history.push(\"/StudentDashboard/Result\");\r\n            })\r\n            .catch(error => {\r\n                console.error('Error finishing proctoring:', error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Test rendering and submission logic here */}\r\n            <button onClick={submitTest}>Submit Exam</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AACxD,OAAOC,KAAK,MAAM,gCAAgC;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,SAASC,UAAUA,CAAA,EAAG;EACpBL,KAAK,CAACM,IAAI,CAAC,oBAAoB,EAAE;IAAEC,IAAI,EAAE;EAAY,CAAC,CAAC,CACpDC,IAAI,CAACC,QAAQ,IAAI;IAChBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAACF,IAAI,CAAC;EACpD,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;IACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD,CAAC,CAAC;AACN;AACA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM;IAAEC,EAAE;IAAEC;EAAS,CAAC,GAAGnB,SAAS,CAAC,CAAC;EACpC,MAAMoB,YAAY,GAAG;IACjB;EAAA,CACH;EACD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAMyB,OAAO,GAAGxB,UAAU,CAAC,CAAC;EAE5B,SAASQ,UAAUA,CAAA,EAAG;IAClBL,KAAK,CAACM,IAAI,CAAC,yCAAyC,CAAC,CAChDE,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACF,IAAI,CAACe,OAAO,CAAC;MAClCD,OAAO,CAACE,IAAI,CAAC,0BAA0B,CAAC;IAC5C,CAAC,CAAC,CACDX,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACV;EAEA,oBACIX,OAAA;IAAAsB,QAAA,eAEItB,OAAA;MAAQuB,OAAO,EAAEpB,UAAW;MAAAmB,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd;AAACd,EAAA,CAzBQD,IAAI;EAAA,QACgBhB,SAAS,EAKlBD,UAAU;AAAA;AAAAiC,EAAA,GANrBhB,IAAI;AA2Bb,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}