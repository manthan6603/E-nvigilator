{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANTHAN PARMAR\\\\Desktop\\\\e proctor\\\\frontend\\\\src\\\\Components\\\\StudentComponent\\\\StudentDashboard\\\\ExamComponent\\\\Exam.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport style from \"../StudentDashboard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Exam() {\n  _s();\n  let {\n    category\n  } = useParams();\n  const allExam = [{\n    id: 1,\n    name: \"Maths\",\n    desc: \"Mathematics exam description\",\n    passMarks: 50,\n    marks: 100\n  }, {\n    id: 2,\n    name: \"Science\",\n    desc: \"Science exam description\",\n    passMarks: 60,\n    marks: 120\n  }\n  // Add more static data as needed\n  ];\n\n  // Function to start the exam\n  const startExam = async examId => {\n    try {\n      const response = await fetch(`/start_exam/${examId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to start exam\");\n      }\n      // Handle successful response, e.g., show a success message\n    } catch (error) {\n      console.error(\"Error:\", error);\n      // Handle error, e.g., show an error message to the user\n    }\n  };\n\n  // Function to end the exam\n  const endExam = async () => {\n    try {\n      const response = await fetch(\"/end_exam\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to end exam\");\n      }\n      // Handle successful response, e.g., show a success message\n    } catch (error) {\n      console.error(\"Error:\", error);\n      // Handle error, e.g., show an error message to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.displayBoxHeadingBox,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"All \", category, \" Exam\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), allExam.map((data, i) => {\n      if (data.name === category) return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.displayBoxExamBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.div1,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.div2,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Exam ID: \", data.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.div2,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Exam Description: \", data.desc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.div3,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Pass Marks: \", data.passMarks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.div4,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Total Marks: \", data.marks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.div5,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startExam(data.id),\n            children: \"Go to Exam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: endExam,\n            children: \"Submit Exam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }, this);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true);\n}\n_s(Exam, \"0DwWnS2C3XgmdrlIss3bPo61p88=\", false, function () {\n  return [useParams];\n});\n_c = Exam;\nexport default Exam;\nvar _c;\n$RefreshReg$(_c, \"Exam\");","map":{"version":3,"names":["React","useParams","style","jsxDEV","_jsxDEV","Fragment","_Fragment","Exam","_s","category","allExam","id","name","desc","passMarks","marks","startExam","examId","response","fetch","method","headers","ok","Error","error","console","endExam","children","displayBoxHeadingBox","fileName","_jsxFileName","lineNumber","columnNumber","map","data","i","displayBoxExamBox","div1","div2","div3","div4","div5","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MANTHAN PARMAR/Desktop/e proctor/frontend/src/Components/StudentComponent/StudentDashboard/ExamComponent/Exam.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport style from \"../StudentDashboard.module.css\";\r\n\r\nfunction Exam() {\r\n    let { category } = useParams();\r\n\r\n    const allExam = [\r\n        {\r\n            id: 1,\r\n            name: \"Maths\",\r\n            desc: \"Mathematics exam description\",\r\n            passMarks: 50,\r\n            marks: 100\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Science\",\r\n            desc: \"Science exam description\",\r\n            passMarks: 60,\r\n            marks: 120\r\n        },\r\n        // Add more static data as needed\r\n    ];\r\n\r\n    // Function to start the exam\r\n    const startExam = async (examId) => {\r\n        try {\r\n            const response = await fetch(`/start_exam/${examId}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(\"Failed to start exam\");\r\n            }\r\n            // Handle successful response, e.g., show a success message\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            // Handle error, e.g., show an error message to the user\r\n        }\r\n    };\r\n\r\n    // Function to end the exam\r\n    const endExam = async () => {\r\n        try {\r\n            const response = await fetch(\"/end_exam\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(\"Failed to end exam\");\r\n            }\r\n            // Handle successful response, e.g., show a success message\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            // Handle error, e.g., show an error message to the user\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id={style.displayBoxHeadingBox}>\r\n                <h1>All {category} Exam</h1>\r\n            </div>\r\n            {\r\n                allExam.map((data, i) => {\r\n                    if (data.name === category)\r\n                        return (\r\n                            <div id={style.displayBoxExamBox} key={i}>\r\n                                <div id={style.div1}><span>{data.name}</span></div>\r\n                                <div id={style.div2}><span>Exam ID: {data.id}</span></div>\r\n                                <div id={style.div2}><span>Exam Description: {data.desc}</span></div>\r\n                                <div id={style.div3}><span>Pass Marks: {data.passMarks}</span></div>\r\n                                <div id={style.div4}><span>Total Marks: {data.marks}</span></div>\r\n                                <div id={style.div5}>\r\n                                    <button onClick={() => startExam(data.id)}>Go to Exam</button>\r\n                                    <button onClick={endExam}>Submit Exam</button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    return <React.Fragment key={i}></React.Fragment>;\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Exam;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}