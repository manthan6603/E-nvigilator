{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANTHAN PARMAR\\\\Desktop\\\\e proctor(test)\\\\frontend\\\\src\\\\Components\\\\StudentComponent\\\\StudentDashboard\\\\TestComponent\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport style from \"../StudentDashboard.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const {\n    id,\n    category\n  } = useParams();\n\n  // Sample static questions data to replace backend data\n  const allQuestions = [{\n    qname: \"Question 1?\",\n    optionOne: \"Option 1\",\n    optionTwo: \"Option 2\",\n    optionThree: \"Option 3\",\n    optionFour: \"Option 4\",\n    answer: \"Option 1\"\n  }, {\n    qname: \"Question 2?\",\n    optionOne: \"Option 1\",\n    optionTwo: \"Option 2\",\n    optionThree: \"Option 3\",\n    optionFour: \"Option 4\",\n    answer: \"Option 2\"\n  }\n  // Add more static questions data as needed\n  ];\n  const [answer, setAnswer] = useState({\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    answer4: \"\",\n    answer5: \"\"\n  });\n  function onRadioButtonChange(e) {\n    setAnswer({\n      ...answer,\n      [e.target.name]: e.target.value\n    });\n  }\n  const history = useHistory();\n  function submitTest() {\n    // Implementing the logic to calculate score and status based on the answers\n    // This logic should remain unchanged regardless of whether data is static or dynamic\n\n    // For demonstration purposes, let's assume all answers are correct\n    const correctAnswer = [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 1\"];\n    let score = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (correctAnswer[i - 1] === answer[`answer${i}`]) {\n        score++;\n      }\n    }\n    const status = score >= 3 ? \"Pass\" : \"Fail\";\n\n    // Simulating the submission process by navigating to the result page\n    history.push(\"/StudentDashboard/Result\");\n  }\n  function terminateProctoring() {\n    // Implement logic to terminate connection with the API\n    // For demonstration purposes, you can log a message\n    console.log(\"Connection terminated with API\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.displayBoxQuestionHeadingBox,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Answer all the questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), allQuestions.map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.displayBoxQuestionBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.divQuestion,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: data.qname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), [1, 2, 3, 4].map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => onRadioButtonChange(e),\n          value: data[`option${option}`],\n          id: style[`option${option}`],\n          name: `answer${i + 1}`,\n          type: \"radio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `option${option}`,\n          children: data[`option${option}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this))]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.submitExam,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitTest,\n        children: \"Submit Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: terminateProctoring,\n        children: \"Terminate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Test, \"EQI4ZvZ83aIPQQD7BW6UwsCFvfU=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useHistory","useParams","style","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_s","id","category","allQuestions","qname","optionOne","optionTwo","optionThree","optionFour","answer","setAnswer","answer1","answer2","answer3","answer4","answer5","onRadioButtonChange","e","target","name","value","history","submitTest","correctAnswer","score","i","status","push","terminateProctoring","console","log","children","displayBoxQuestionHeadingBox","fileName","_jsxFileName","lineNumber","columnNumber","map","data","displayBoxQuestionBox","divQuestion","option","onChange","type","htmlFor","submitExam","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MANTHAN PARMAR/Desktop/e proctor(test)/frontend/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport style from \"../StudentDashboard.module.css\";\r\n\r\nfunction Test() {\r\n    const { id, category } = useParams();\r\n\r\n    // Sample static questions data to replace backend data\r\n    const allQuestions = [\r\n        {\r\n            qname: \"Question 1?\",\r\n            optionOne: \"Option 1\",\r\n            optionTwo: \"Option 2\",\r\n            optionThree: \"Option 3\",\r\n            optionFour: \"Option 4\",\r\n            answer: \"Option 1\",\r\n        },\r\n        {\r\n            qname: \"Question 2?\",\r\n            optionOne: \"Option 1\",\r\n            optionTwo: \"Option 2\",\r\n            optionThree: \"Option 3\",\r\n            optionFour: \"Option 4\",\r\n            answer: \"Option 2\",\r\n        },\r\n        // Add more static questions data as needed\r\n    ];\r\n\r\n    const [answer, setAnswer] = useState({\r\n        answer1: \"\",\r\n        answer2: \"\",\r\n        answer3: \"\",\r\n        answer4: \"\",\r\n        answer5: \"\",\r\n    });\r\n\r\n    function onRadioButtonChange(e) {\r\n        setAnswer({\r\n            ...answer,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    function submitTest() {\r\n        // Implementing the logic to calculate score and status based on the answers\r\n        // This logic should remain unchanged regardless of whether data is static or dynamic\r\n\r\n        // For demonstration purposes, let's assume all answers are correct\r\n        const correctAnswer = [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 1\"];\r\n        let score = 0;\r\n        for (let i = 1; i <= 5; i++) {\r\n            if (correctAnswer[i - 1] === answer[`answer${i}`]) {\r\n                score++;\r\n            }\r\n        }\r\n\r\n        const status = score >= 3 ? \"Pass\" : \"Fail\";\r\n\r\n        // Simulating the submission process by navigating to the result page\r\n        history.push(\"/StudentDashboard/Result\");\r\n    }\r\n\r\n    function terminateProctoring() {\r\n        // Implement logic to terminate connection with the API\r\n        // For demonstration purposes, you can log a message\r\n        console.log(\"Connection terminated with API\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id={style.displayBoxQuestionHeadingBox}>\r\n                <h1>Answer all the questions</h1>\r\n            </div>\r\n            {allQuestions.map((data, i) => (\r\n                <div id={style.displayBoxQuestionBox} key={i}>\r\n                    <div id={style.divQuestion}>\r\n                        <span>{data.qname}</span>\r\n                    </div>\r\n                    {[1, 2, 3, 4].map((option) => (\r\n                        <div key={option}>\r\n                            <input\r\n                                onChange={(e) => onRadioButtonChange(e)}\r\n                                value={data[`option${option}`]}\r\n                                id={style[`option${option}`]}\r\n                                name={`answer${i + 1}`}\r\n                                type=\"radio\"\r\n                            />\r\n                            <label htmlFor={`option${option}`}>{data[`option${option}`]}</label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            <div id={style.submitExam}>\r\n                <button onClick={submitTest}>Submit Exam</button>\r\n                <button onClick={terminateProctoring}>Terminate</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}