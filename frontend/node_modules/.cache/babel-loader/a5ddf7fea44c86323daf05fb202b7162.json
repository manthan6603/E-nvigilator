{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANTHAN PARMAR\\\\Desktop\\\\e proctor(test)\\\\frontend\\\\src\\\\Components\\\\StudentComponent\\\\StudentDashboard\\\\TestComponent\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport style from \"../StudentDashboard.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const {\n    id,\n    category\n  } = useParams();\n  const allQuestions = [{\n    qname: \"Question 1?\",\n    optionOne: \"Option 1\",\n    optionTwo: \"Option 2\",\n    optionThree: \"Option 3\",\n    optionFour: \"Option 4\",\n    answer: \"Option 1\"\n  }, {\n    qname: \"Question 2?\",\n    optionOne: \"Option 1\",\n    optionTwo: \"Option 2\",\n    optionThree: \"Option 3\",\n    optionFour: \"Option 4\",\n    answer: \"Option 2\"\n  }\n  // Add more static questions data as needed\n  ];\n  const [answer, setAnswer] = useState({\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    answer4: \"\",\n    answer5: \"\"\n  });\n  const history = useHistory();\n  const controllerRef = useRef(null); // Ref to store the AbortController instance\n\n  function onRadioButtonChange(e) {\n    setAnswer({\n      ...answer,\n      [e.target.name]: e.target.value\n    });\n  }\n  async function submitTest() {\n    try {\n      // If there's an ongoing API call, abort it\n      if (controllerRef.current) {\n        controllerRef.current.abort();\n      }\n\n      // Start a new API call to start proctoring\n      const controller = new AbortController();\n      controllerRef.current = controller;\n      const signal = controller.signal;\n      const response = await fetch(\"http://127.0.0.1:5000/start_proctoring\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        signal: signal // Pass the signal to the fetch options\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to start proctoring\");\n      }\n      // Handle successful response\n\n      // Simulating the submission process by navigating to the result page\n      history.push(\"/StudentDashboard/Result\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      // Handle error\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.displayBoxQuestionHeadingBox,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Answer all the questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), allQuestions.map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.displayBoxQuestionBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.divQuestion,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: data.qname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), [1, 2, 3, 4].map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => onRadioButtonChange(e),\n          value: data[`option${option}`],\n          id: style[`option${option}`],\n          name: `answer${i + 1}`,\n          type: \"radio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `option${option}`,\n          children: data[`option${option}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this))]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.submitExam,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitTest,\n        children: \"Submit Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Test, \"GK82Ypk4QirTOnthWolJG9nl6Us=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useRef","useHistory","useParams","style","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_s","id","category","allQuestions","qname","optionOne","optionTwo","optionThree","optionFour","answer","setAnswer","answer1","answer2","answer3","answer4","answer5","history","controllerRef","onRadioButtonChange","e","target","name","value","submitTest","current","abort","controller","AbortController","signal","response","fetch","method","headers","ok","Error","push","error","console","children","displayBoxQuestionHeadingBox","fileName","_jsxFileName","lineNumber","columnNumber","map","data","i","displayBoxQuestionBox","divQuestion","option","onChange","type","htmlFor","submitExam","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MANTHAN PARMAR/Desktop/e proctor(test)/frontend/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport style from \"../StudentDashboard.module.css\";\r\n\r\nfunction Test() {\r\n    const { id, category } = useParams();\r\n\r\n    const allQuestions = [\r\n        {\r\n            qname: \"Question 1?\",\r\n            optionOne: \"Option 1\",\r\n            optionTwo: \"Option 2\",\r\n            optionThree: \"Option 3\",\r\n            optionFour: \"Option 4\",\r\n            answer: \"Option 1\",\r\n        },\r\n        {\r\n            qname: \"Question 2?\",\r\n            optionOne: \"Option 1\",\r\n            optionTwo: \"Option 2\",\r\n            optionThree: \"Option 3\",\r\n            optionFour: \"Option 4\",\r\n            answer: \"Option 2\",\r\n        },\r\n        // Add more static questions data as needed\r\n    ];\r\n\r\n    const [answer, setAnswer] = useState({\r\n        answer1: \"\",\r\n        answer2: \"\",\r\n        answer3: \"\",\r\n        answer4: \"\",\r\n        answer5: \"\",\r\n    });\r\n\r\n    const history = useHistory();\r\n    const controllerRef = useRef(null); // Ref to store the AbortController instance\r\n\r\n    function onRadioButtonChange(e) {\r\n        setAnswer({\r\n            ...answer,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    async function submitTest() {\r\n        try {\r\n            // If there's an ongoing API call, abort it\r\n            if (controllerRef.current) {\r\n                controllerRef.current.abort();\r\n            }\r\n\r\n            // Start a new API call to start proctoring\r\n            const controller = new AbortController();\r\n            controllerRef.current = controller;\r\n            const signal = controller.signal;\r\n\r\n            const response = await fetch(\"http://127.0.0.1:5000/start_proctoring\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                signal: signal // Pass the signal to the fetch options\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(\"Failed to start proctoring\");\r\n            }\r\n            // Handle successful response\r\n\r\n            // Simulating the submission process by navigating to the result page\r\n            history.push(\"/StudentDashboard/Result\");\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            // Handle error\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id={style.displayBoxQuestionHeadingBox}>\r\n                <h1>Answer all the questions</h1>\r\n            </div>\r\n            {allQuestions.map((data, i) => (\r\n                <div id={style.displayBoxQuestionBox} key={i}>\r\n                    <div id={style.divQuestion}>\r\n                        <span>{data.qname}</span>\r\n                    </div>\r\n                    {[1, 2, 3, 4].map((option) => (\r\n                        <div key={option}>\r\n                            <input\r\n                                onChange={(e) => onRadioButtonChange(e)}\r\n                                value={data[`option${option}`]}\r\n                                id={style[`option${option}`]}\r\n                                name={`answer${i + 1}`}\r\n                                type=\"radio\"\r\n                            />\r\n                            <label htmlFor={`option${option}`}>{data[`option${option}`]}</label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            <div id={style.submitExam}>\r\n                <button onClick={submitTest}>Submit Exam</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}