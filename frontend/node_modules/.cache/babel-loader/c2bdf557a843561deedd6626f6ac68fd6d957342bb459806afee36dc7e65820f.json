{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANTHAN PARMAR\\\\Desktop\\\\e proctor(test)\\\\frontend\\\\src\\\\Components\\\\AdminComponent\\\\AdminDashboard\\\\ExamComponent\\\\AddQuestion\\\\AddQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport style from \"../../SubjectComponent/Subject.module.css\";\n\n// Set base URL for Axios requests to communicate with the backend on port 5000\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5000/api';\nfunction AddQuestion() {\n  _s();\n  const {\n    id\n  } = useParams(); // This is the exam ID\n\n  const [question, setQuestion] = useState({\n    questionText: \"\",\n    options: [\"\", \"\", \"\", \"\"],\n    correctOption: \"\"\n  });\n  const history = useHistory();\n  const handleInputChange = (e, index) => {\n    if (index !== undefined) {\n      // This means it's one of the options being updated\n      const updatedOptions = [...question.options];\n      updatedOptions[index] = e.target.value;\n      setQuestion({\n        ...question,\n        options: updatedOptions\n      });\n    } else {\n      // For non-array fields like questionText and correctOption\n      setQuestion({\n        ...question,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n  const addNewQuestion = async () => {\n    try {\n      // Ensure the base URL is correct and include the exam ID in the endpoint\n      const response = await axios.post(`http://localhost:5000/api/exams/${id}/questions`, question);\n      if (response.status === 201) {\n        history.push(`/AdminDashboard/Exam/ViewQuestion/${id}`); // Redirect on successful post\n      }\n    } catch (error) {\n      console.error('Error adding new question:', error.response.data);\n    }\n  };\n  const handleGoBack = () => {\n    history.goBack();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.displayHeadingBox,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Adding Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.addBox,\n      className: style.addQuestion,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Question Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => handleInputChange(e),\n        name: \"questionText\",\n        type: \"text\",\n        placeholder: \"Enter Question Text\",\n        value: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Option \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => handleInputChange(e, index),\n          type: \"text\",\n          value: option,\n          placeholder: `Enter Option ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Correct Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => handleInputChange(e),\n        name: \"correctOption\",\n        type: \"text\",\n        placeholder: \"Enter the correct option (e.g., 'Option 1')\",\n        value: question.correctOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.buttonBox,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewQuestion,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGoBack,\n          children: \"Go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(AddQuestion, \"Bp+5+7wT+BLHCBV8o7X5jpl7Xss=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = AddQuestion;\nexport default AddQuestion;\nvar _c;\n$RefreshReg$(_c, \"AddQuestion\");","map":{"version":3,"names":["React","useState","useHistory","useParams","axios","style","jsxDEV","_jsxDEV","Fragment","_Fragment","defaults","baseURL","AddQuestion","_s","id","question","setQuestion","questionText","options","correctOption","history","handleInputChange","e","index","undefined","updatedOptions","target","value","name","addNewQuestion","response","post","status","push","error","console","data","handleGoBack","goBack","children","displayHeadingBox","fileName","_jsxFileName","lineNumber","columnNumber","addBox","className","addQuestion","onChange","type","placeholder","map","option","buttonBox","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MANTHAN PARMAR/Desktop/e proctor(test)/frontend/src/Components/AdminComponent/AdminDashboard/ExamComponent/AddQuestion/AddQuestion.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport style from \"../../SubjectComponent/Subject.module.css\";\r\n\r\n// Set base URL for Axios requests to communicate with the backend on port 5000\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nfunction AddQuestion() {\r\n    const { id } = useParams(); // This is the exam ID\r\n\r\n    const [question, setQuestion] = useState({\r\n        questionText: \"\",\r\n        options: [\"\", \"\", \"\", \"\"],\r\n        correctOption: \"\"\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleInputChange = (e, index) => {\r\n        if (index !== undefined) { // This means it's one of the options being updated\r\n            const updatedOptions = [...question.options];\r\n            updatedOptions[index] = e.target.value;\r\n            setQuestion({\r\n                ...question,\r\n                options: updatedOptions\r\n            });\r\n        } else {\r\n            // For non-array fields like questionText and correctOption\r\n            setQuestion({\r\n                ...question,\r\n                [e.target.name]: e.target.value\r\n            });\r\n        }\r\n    };\r\n\r\n    const addNewQuestion = async () => {\r\n        try {\r\n            // Ensure the base URL is correct and include the exam ID in the endpoint\r\n            const response = await axios.post(`http://localhost:5000/api/exams/${id}/questions`, question);\r\n            if (response.status === 201) {\r\n                history.push(`/AdminDashboard/Exam/ViewQuestion/${id}`); // Redirect on successful post\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding new question:', error.response.data);\r\n        }\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id={style.displayHeadingBox}>\r\n                <h2>Adding Question</h2>\r\n            </div>\r\n\r\n            <div id={style.addBox} className={style.addQuestion}>\r\n                <label>Question Text</label>\r\n                <input\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    name=\"questionText\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Question Text\"\r\n                    value={question.questionText}\r\n                />\r\n\r\n                {question.options.map((option, index) => (\r\n                    <div key={index}>\r\n                        <label>Option {index + 1}</label>\r\n                        <input\r\n                            onChange={(e) => handleInputChange(e, index)}\r\n                            type=\"text\"\r\n                            value={option}\r\n                            placeholder={`Enter Option ${index + 1}`}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n                <label>Correct Option</label>\r\n                <input\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    name=\"correctOption\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter the correct option (e.g., 'Option 1')\"\r\n                    value={question.correctOption}\r\n                />\r\n\r\n                <div id={style.buttonBox}>\r\n                    <button onClick={addNewQuestion}>Add</button>\r\n                    <button onClick={handleGoBack}>Go back</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddQuestion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}