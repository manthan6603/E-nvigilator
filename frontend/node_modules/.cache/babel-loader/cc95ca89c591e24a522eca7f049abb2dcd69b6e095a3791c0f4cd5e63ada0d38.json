{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANTHAN PARMAR\\\\Desktop\\\\e proctor(test)\\\\frontend\\\\src\\\\Components\\\\StudentComponent\\\\StudentDashboard\\\\TestComponent\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport style from \"../StudentDashboard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5000';\nfunction Test() {\n  _s();\n  const {\n    id,\n    category\n  } = useParams();\n  const history = useHistory();\n\n  // Sample questions with options\n  const allQuestions = [{\n    questionId: 'q1',\n    questionText: \"What is the capital of France?\",\n    options: [\"Paris\", \"London\", \"Berlin\", \"Madrid\"]\n  }, {\n    questionId: 'q2',\n    questionText: \"What is 2 + 2?\",\n    options: [\"3\", \"4\", \"5\", \"6\"]\n  }, {\n    questionId: 'q3',\n    questionText: \"Who wrote Hamlet?\",\n    options: [\"William Shakespeare\", \"Charles Dickens\", \"Leo Tolstoy\", \"Mark Twain\"]\n  }, {\n    questionId: 'q4',\n    questionText: \"What is the largest ocean on Earth?\",\n    options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Arctic Ocean\", \"Pacific Ocean\"]\n  }, {\n    questionId: 'q5',\n    questionText: \"What year did the Titanic sink?\",\n    options: [\"1912\", \"1905\", \"1898\", \"1923\"]\n  }];\n  const [answers, setAnswers] = useState({});\n  function handleAnswerChange(event, questionId) {\n    setAnswers({\n      ...answers,\n      [questionId]: event.target.value\n    });\n  }\n  function submitTest() {\n    axios.post('/finish_proctoring', {\n      answers\n    }).then(response => {\n      console.log('Proctoring finished:', response.data);\n      history.push(\"/StudentDashboard/Result\");\n    }).catch(error => {\n      console.error('Error finishing proctoring:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.testContainer,\n    children: [allQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.questionContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: style.optionLabel,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: question.questionId,\n          value: option,\n          checked: answers[question.questionId] === option,\n          onChange: e => handleAnswerChange(e, question.questionId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), option]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this))]\n    }, question.questionId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitTest,\n      className: style.submitButton,\n      children: \"Submit Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Test, \"q65YCPUoBa5W9B45BeDtdaTjii0=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useHistory","useParams","axios","style","jsxDEV","_jsxDEV","defaults","baseURL","Test","_s","id","category","history","allQuestions","questionId","questionText","options","answers","setAnswers","handleAnswerChange","event","target","value","submitTest","post","then","response","console","log","data","push","catch","error","className","testContainer","children","map","question","index","questionContainer","fileName","_jsxFileName","lineNumber","columnNumber","option","i","optionLabel","type","name","checked","onChange","e","onClick","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/MANTHAN PARMAR/Desktop/e proctor(test)/frontend/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport style from \"../StudentDashboard.module.css\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000';\r\n\r\nfunction Test() {\r\n    const { id, category } = useParams();\r\n    const history = useHistory();\r\n\r\n    // Sample questions with options\r\n    const allQuestions = [\r\n        {\r\n            questionId: 'q1',\r\n            questionText: \"What is the capital of France?\",\r\n            options: [\"Paris\", \"London\", \"Berlin\", \"Madrid\"]\r\n        },\r\n        {\r\n            questionId: 'q2',\r\n            questionText: \"What is 2 + 2?\",\r\n            options: [\"3\", \"4\", \"5\", \"6\"]\r\n        },\r\n        {\r\n            questionId: 'q3',\r\n            questionText: \"Who wrote Hamlet?\",\r\n            options: [\"William Shakespeare\", \"Charles Dickens\", \"Leo Tolstoy\", \"Mark Twain\"]\r\n        },\r\n        {\r\n            questionId: 'q4',\r\n            questionText: \"What is the largest ocean on Earth?\",\r\n            options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Arctic Ocean\", \"Pacific Ocean\"]\r\n        },\r\n        {\r\n            questionId: 'q5',\r\n            questionText: \"What year did the Titanic sink?\",\r\n            options: [\"1912\", \"1905\", \"1898\", \"1923\"]\r\n        }\r\n    ];\r\n\r\n    const [answers, setAnswers] = useState({});\r\n\r\n    function handleAnswerChange(event, questionId) {\r\n        setAnswers({\r\n            ...answers,\r\n            [questionId]: event.target.value\r\n        });\r\n    }\r\n\r\n    function submitTest() {\r\n        axios.post('/finish_proctoring', { answers })\r\n            .then(response => {\r\n                console.log('Proctoring finished:', response.data);\r\n                history.push(\"/StudentDashboard/Result\");\r\n            })\r\n            .catch(error => {\r\n                console.error('Error finishing proctoring:', error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className={style.testContainer}>\r\n            {allQuestions.map((question, index) => (\r\n                <div key={question.questionId} className={style.questionContainer}>\r\n                    <p>{question.questionText}</p>\r\n                    {question.options.map((option, i) => (\r\n                        <label key={i} className={style.optionLabel}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name={question.questionId}\r\n                                value={option}\r\n                                checked={answers[question.questionId] === option}\r\n                                onChange={(e) => handleAnswerChange(e, question.questionId)}\r\n                            />\r\n                            {option}\r\n                        </label>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            <button onClick={submitTest} className={style.submitButton}>Submit Exam</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}